const [anots, setAnots] = useState<AnotProps[]>([])
    const [nomeInput, setNomeInput] = useState("")
    const [descInput, setDescInput] = useState("")
    const [colorBackgroundInput, setColorBackgroundInput] = useState("#000000")
    const [colorTextInput, setColorTextInput] = useState("#FFFFFF")
    const collectionRef = collection(db, "Post-it");
    const [editAnot, setEditAnot] = useState({
        enabled: false,
        nome: '',
        descricao: '',
        bg: '',
        color: '',
    })
    function onSubmit(data: FormData) {
        addDoc(collection(db, "Post-it"), {
            nome: data.nome,
            descricao: data.descricao,
            color: data.color,
            bg: data.bg,
            created: new Date(),
            autor: user?.name,
            uid: user?.uid,
        })
            .then(() => {
                reset();
                console.log("CADASTRADO COM SUCESSO")

            })
            .catch((error) => {
                console.log(error)
                console.log("ERRO AO CADASTRAR")

            })

    }


    useEffect(() => {
        function loadingAnots() {
            if (!user?.uid) {
                return
            }

            const anotRef = collection(db, "Post-it")
            const queryRef = query(anotRef, where("uid", "==", user.uid))

            getDocs(queryRef)
                .then((snapshot) => {
                    let lista = [] as AnotProps[];
                    snapshot.forEach((doc) => {
                        lista.push({
                            id: doc.id,
                            nome: doc.data().nome,
                            descricao: doc.data().descricao,
                            bg: doc.data().bg,
                            color: doc.data().color,
                            uid: doc.data().uid
                        })
                    })

                    setAnots(lista)
                    return
                })
        }
        loadingAnots();
    }, [user])




    function clear() {
        setNomeInput('')
        setDescInput('')
        setColorBackgroundInput('#000000')
        setColorTextInput('#FFFFFF')
    }


    function handleRegister() {
        setNomeInput('')
        setDescInput('')
        setColorBackgroundInput('#000000')
        setColorTextInput('#FFFFFF')
        console.log("cadastrado com sucesso")
        if (editAnot.enabled) {
            handleUpdate();
            return;
        }

    }

    function handleEdit(nome: string, color: string, descricao: string, bg: string) {
        setEditAnot({
            enabled: true,
            nome: nome,
            descricao: descricao,
            bg: bg,
            color: color,
        })
        setNomeInput(nome)
        setDescInput(descricao)
        setColorBackgroundInput(bg)
        setColorTextInput(color)
    }

    function handleUpdate() {
        const data = {
            nome: nomeInput,
            descricao: descInput,
            bg: colorBackgroundInput,
            color: colorTextInput,
        }
        const docRef = doc(collectionRef, "Post-it");
        updateDoc(docRef, data);
        setEditAnot({
            enabled: false,
            nome: '',
            descricao: '',
            bg: '',
            color: '',
        })
        setNomeInput('')
        setDescInput('')
        setColorBackgroundInput('#000000')
        setColorTextInput('#FFFFFF')
    }